无视总记录数输出，为提高查询速度，
查询主体 SP 变为：

. 根据参数 （ Where, Order, PageSize, PKsSize, RowsSize, IsOutputCount )
  返回  总记录数, 前 PKsSize 条 主键集 和 前 PageSize 条 行集

结果集大致长像：

class QueryResult<PK, T>
{
   Int32 Count;
   List<PK> PKs;
   List<T> Rows;
}
当参数 IsOutputCount 为 true 时， Count 为真实数据， 否则为 Max( PKs.Count, Rows.Count )
当查询结果大等于 PKsSize 行时， Result 的 IDs 被填充， Rows 只含 PageSize 行数据。
当结果集小等于 RowsSize 行时， IDs 为空，Rows 含所有数据。



翻页操作实现用 SP：

. 根据参数 ( PKs ) 返回 行集

结果集大致长像：

List<T> Rows;






调用带表值参数的 SP 的直接序列化样本


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;
using System.Data.SqlClient;
using System.Data;
using Microsoft.SqlServer.Server;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            using (var connection = new SqlConnection("Data Source=data;Initial Catalog=Test;Persist Security Info=True;User ID=sa;Password=1"))
            {
                connection.Open();

                var rows = new Rows();
                rows.Add(new Row { c1 = 1, c2 = 1, c3 = "asdf" });
                rows.Add(new Row { c1 = 2, c2 = 2, c3 = "qwer" });

                using (var cmd = new SqlCommand
                {
                    Connection = connection,
                    CommandText = rows.GetScript("@p1") + "exec usp_SelectP1 @P1 = @p1",
                })
                {
                    Console.WriteLine(cmd.CommandText);
                    var result = cmd.ExecuteScalar();
                    Console.WriteLine(result);
                }
            }
        }
    }

    class Row
    {
        public int c1;
        public int c2;
        public string c3;

        public string DumpValues()
        {
            return c1 + ", " + c2 + ", " + "N'" + c3 + "'";
        }
    }

    class Rows : List<Row>
    {
        public string GetScript(string n)
        {
            var sb = new StringBuilder(@"declare " + n + @" dbo.FS;
insert into " + n);
            for (int i = 0; i < this.Count; i++)
            {
                var row = this[i];
                sb.Append(@"
" + (i == 0 ? "values" : ",") + @" (" + row.DumpValues() + @")");
            }
            sb.Append(@";
");
            return sb.ToString();
        }
    }

}
